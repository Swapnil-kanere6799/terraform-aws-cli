name: eventstore/Mongo-Data-Migration

run-name: eventstore/Mongo-Data-Migration-from-${{ inputs.SourceStackName }}-to-${{ inputs.DestinationStackName }}-${{ github.run_number }}

on:
  workflow_dispatch:
    inputs:
      AccountId:
        type: string
        description: Accounts to be migrated, Example:- 1733818752,1733818753
        required: true
        default: ""

      SourceStackName:
        type: string
        description: Name of the source stack
        required: true
        default: ""

      DestinationStackName:
        type: string
        description: Name of the destination stack
        required: true
        default: ""

      RedisStackName:
        type: string
        description: Name of the source stack
        required: true
        default: ""

      CatalogStoreStackName:
        type: string
        description: Name of the source stack
        required: true
        default: ""

      SourceRegion:
        type: string
        description: Source stack region
        required: true
        default: ""

      DestinationRegion:
        type: string
        description: Destination stack region
        required: true
        default: ""

      SourceStackPrefix:
        type: string
        description: Source stack prefix
        required: true
        default: ""

      DestinationStackPrefix:
        type: string
        description: Destination stack prefix
        required: true
        default: ""

      SourceStartIp:
        type: string
        description: Source start ip
        required: true
        default: ""

      DestinationStartIp:
        type: string
        description: Destination start ip
        required: true
        default: ""

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  setup-job-environment:
    runs-on: ${{ inputs.DestinationStackPrefix }}
    steps:
      - name: Generate github token
        id: generate-github-token
        uses: tibdex/github-app-token@v1.8.0
        with:
          app_id: ${{ secrets.CLEVERTAP_SNE_BOT_ID }}
          private_key: ${{ secrets.CLEVERTAP_SNE_BOT_PRIVATE_ACCESS_KEY }}

      - name: Checkout Infra-Actions repo
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Checkout Cloudformation repo
        id: checkout-cloudformation-repo
        uses: actions/checkout@v3
        with:
          repository: CleverTap-SNE/Cloudformation
          path: cloudformation
          token: ${{ steps.generate-github-token.outputs.token }}

      - name: Install Python Requirements
        run: |
          set -euxo pipefail
          python3 -m venv prod-venv
          source prod-venv/bin/activate
          pip3 install requests argparse pymongo==4.6.3 argparse

      - name: get primary host ip of destination
        id: get-primary-host-ip
        run: |
          set -euxo pipefail
          source prod-venv/bin/activate
          destination_mongo_cluster_hosts=$(jq -r '.[] | select(.Name == "${{ inputs.DestinationStackPrefix }}-Mongo-MetaData-1") .Instances[] | select(.EnableEc2instance == true and .StopServices == false) .PrivateIpAddress' cloudformation/mongo/${{ inputs.DestinationStackPrefix }}/clusters.json | tr '\n' ',' | sed 's/,$//')
          destination_primary_host=$(python3 ./scripts/mongo/get_primary_host.py --mongo-hosts $destination_mongo_cluster_hosts)
          echo "DESTINATION_PRIMARY_HOSTS=${destination_primary_host}" >> $GITHUB_OUTPUT
        env:
          MONGO_INFRA_USER: ${{ secrets.MONGO_INFRA_USER }}
          MONGO_INFRA_PASSWORD: ${{ secrets.MONGO_INFRA_PASSWORD }}
          
      - name: Get redis start ip
        id: get-redis-start-ip
        working-directory: cloudformation
        run: |
          set -euxo pipefail
          stack_prefix=${{ inputs.DestinationStackPrefix }}
          start_ip=$(jq -r '.[] | select(.Name == "${{ inputs.RedisStackName }}") | .StartIp' redis/$stack_prefix/clusters.json)
          echo "PAIR_START_IP=$start_ip" >> $GITHUB_OUTPUT

      - name: Get catalogstore start ip
        id: get-catalogstore-start-ip
        working-directory: cloudformation
        run: |
          set -euxo pipefail
          stack_prefix=${{ inputs.DestinationStackPrefix }}
          start_ip=$(jq -r '.[] | select(.Name == "${{ inputs.CatalogStoreStackName }}") | .StartIp' catalogstore/$stack_prefix/clusters.json)
          echo "CS_START_IP=$start_ip" >> $GITHUB_OUTPUT          

      - name: Get cluster id
        id: get-cluster-id
        run: |
          set -euxo pipefail
          python3 -m venv prod-venv
          source prod-venv/bin/activate
          redis_cluster_id=$(python3 ./scripts/eventstore/fetch-cluster-id.py --primary ${{ steps.get-primary-host-ip.outputs.DESTINATION_PRIMARY_HOSTS }} --host ${{ steps.get-redis-start-ip.outputs.PAIR_START_IP }}:6379 --task redis)
          eventstore_cluster_id=$(python3 ./scripts/eventstore/fetch-cluster-id.py --primary ${{ steps.get-primary-host-ip.outputs.DESTINATION_PRIMARY_HOSTS }} --host ${{ inputs.DestinationStartIp }}:8080 --task eventstore)
          catalogstore_cluster_id=$(python3 ./scripts/eventstore/fetch-cluster-id.py --primary ${{ steps.get-primary-host-ip.outputs.DESTINATION_PRIMARY_HOSTS }} --host ${{ inputs.CS_START_IP }} --task catalogstore)          
          echo "REDIS_CLUSTER_ID=$redis_cluster_id" >> $GITHUB_OUTPUT
          echo "ES_CLUSTER_ID=$eventstore_cluster_id" >> $GITHUB_OUTPUT
          echo "CS_CLUSTER_ID=$catalogstore_cluster_id" >> $GITHUB_OUTPUT
        env:
          MONGO_INFRA_USER: ${{ secrets.MONGO_INFRA_USER }}
          MONGO_INFRA_PASSWORD: ${{ secrets.MONGO_INFRA_PASSWORD }}

    outputs:
      REDIS_CLUSTER_ID: ${{ steps.get-cluster-id.outputs.REDIS_CLUSTER_ID }}
      ES_CLUSTER_ID: ${{ steps.get-cluster-id.outputs.ES_CLUSTER_ID }}
      CS_CLUSTER_ID: ${{ steps.get-cluster-id.outputs.CS_CLUSTER_ID }}

  pre-flight-validation-via-vpc-runner:
    runs-on: eu1
    steps:
      - name: Checkout Infra-Actions repo
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install Python Requirements
        run: |
          set -euxo pipefail
          python3 -m venv prod-venv
          source prod-venv/bin/activate
          pip3 install requests argparse pymongo==4.6.3 argparse

      - name: get primary host ip
        id: get-primary-host-ip
        run: |
          set -euxo pipefail
          source prod-venv/bin/activate
          mongo_cluster_hosts=$(jq -r '.[] | select(.Name == "eu1-Mongo-MetaData-1") .Instances[] | select(.EnableEc2instance == true and .StopServices == false) .PrivateIpAddress' cloudformation/mongo/eu1/clusters.json | tr '\n' ',' | sed 's/,$//')
          primary_host=$(python3 ./scripts/mongo/get_primary_host.py --mongo-hosts $mongo_cluster_hosts)
          echo "PRIMARY_HOSTS=${primary_host}" >> $GITHUB_OUTPUT
        env:
          MONGO_INFRA_USER: ${{ secrets.MONGO_INFRA_USER }}
          MONGO_INFRA_PASSWORD: ${{ secrets.MONGO_INFRA_PASSWORD }}

      - name: Check account entry is present in eu1
        run: |
          set -euxo pipefail
          source prod-venv/bin/activate
          python3 ./scripts/eventstore/mongo-data-migration.py --mongo-primary-ip ${{ steps.get-primary-host-ip.outputs.PRIMARY_HOSTS }} --task "2" --account-ids ${{ inputs.AccountId }}
        env:
          MONGO_INFRA_USER: ${{ secrets.MONGO_INFRA_USER }}
          MONGO_INFRA_PASSWORD: ${{ secrets.MONGO_INFRA_PASSWORD }}

  start-mongo-data-migration:
    runs-on: ${{ needs.setup-job-environment.outputs.SourceStackPrefix }}
    needs:
      - setup-job-environment
    steps:
      - name: Checkout Infra-Actions repo
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Install Python Requirements
        run: |
          set -euxo pipefail
          python3 -m venv prod-venv
          source prod-venv/bin/activate
          pip3 install requests argparse pymongo==4.6.3 argparse

      - name: get primary host ip
        id: get-primary-host-ip
        run: |
          set -euxo pipefail
          source prod-venv/bin/activate
          source_mongo_cluster_hosts=$(jq -r '.[] | select(.Name == "${{ inputs.SourceStackPrefix }}-Mongo-MetaData-1") .Instances[] | select(.EnableEc2instance == true and .StopServices == false) .PrivateIpAddress' cloudformation/mongo/${{ inputs.SourceStackPrefix }}/clusters.json | tr '\n' ',' | sed 's/,$//')
          source_primary_host=$(python3 ./scripts/mongo/get_primary_host.py --mongo-hosts $source_mongo_cluster_hosts)
          echo "SOURCE_PRIMARY_HOSTS=${source_primary_host}" >> $GITHUB_OUTPUT
        env:
          MONGO_INFRA_USER: ${{ secrets.MONGO_INFRA_USER }}
          MONGO_INFRA_PASSWORD: ${{ secrets.MONGO_INFRA_PASSWORD }}

      - name: Get cluster ids
        id: get-cluster-ids
        run: |
          set -euxo pipefail
          source prod-venv/bin/activate
          source_cluster_id=$(python3 ./scripts/eventstore/fetch-cluster-id.py --primary ${{ steps.get-primary-host-ip.outputs.SOURCE_PRIMARY_HOSTS }} --host ${{ inputs.SourceStartIp }}:8080 --task eventstore)
          echo "SOURCE_CLUSTER_ID=${source_cluster_id}" >> $GITHUB_OUTPUT
        env:
          MONGO_INFRA_USER: ${{ secrets.MONGO_INFRA_USER }}
          MONGO_INFRA_PASSWORD: ${{ secrets.MONGO_INFRA_PASSWORD }}

      - name: Get es host for accounts ${{ inputs.AccountId }}
        id: get-current-cluster-id
        run: |
          set -euxo pipefail
          source prod-venv/bin/activate
          current_entry=$(python3 ./scripts/eventstore/check-mongo-entry.py --primary ${{ steps.get-primary-host-ip.outputs.SOURCE_PRIMARY_HOSTS }} --ids ${{ inputs.AccountId }})
          echo "CURRENT_CLUSTER_ID=${current_entry}" >> $GITHUB_OUTPUT
        env:
          MONGO_INFRA_USER: ${{ secrets.MONGO_INFRA_USER }}
          MONGO_INFRA_PASSWORD: ${{ secrets.MONGO_INFRA_PASSWORD }}

      - name: Compare es host source with account es host
        run: |
          set -euxo pipefail
          source prod-venv/bin/activate
          var1="${{ steps.get-current-cluster-id.outputs.CURRENT_CLUSTER_ID }}"
          var2=""${{ steps.get-cluster-ids.outputs.SOURCE_CLUSTER_ID }}""
          if [ "$var1" == "$var2" ]; then
            echo "Current es host value matches with account es host."
          else
            echo "Current es host value does not matches with account es host."
            exit 1
          fi

      - name: Update mongo entry for mongo data migration
        run: |
          set -euxo pipefail
          source prod-venv/bin/activate
          source_region=$(echo ${{ inputs.SourceStackPrefix }} | cut -c 1-2)
          destination_region=$(echo ${{ inputs.DestinationStackPrefix }} | cut -c 1-2)
          python3 ./scripts/eventstore/mongo-data-migration.py --mongo-primary-ip ${{ steps.get-primary-host-ip.outputs.SOURCE_PRIMARY_HOSTS }} --task 1 --account-ids ${{ inputs.AccountId }} --source-region $source_region --destination-region $destination_region --eventstore-host ${{ needs.setup-job-environment.outputs.ES_CLUSTER_ID }} --redis-host ${{ needs.setup-job-environment.outputs.REDIS_CLUSTER_ID }} --redis-host-lp ${{ needs.setup-job-environment.outputs.REDIS_CLUSTER_ID }} --catalog-store-host ${{ needs.setup-job-environment.outputs.CS_CLUSTER_ID }}  

      - name: Start Regional Account Migration
        run: |
          set -euxo pipefail
          source prod-venv/bin/activate
          python3 ./scripts/eventstore/mongo-data-migration.py --mongo-primary-ip ${{ steps.get-primary-host-ip.outputs.SOURCE_PRIMARY_HOSTS }} --task 3 --account-ids ${{ inputs.AccountId }}
